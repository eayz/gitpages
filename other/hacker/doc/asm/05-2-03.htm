<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>5.2.3 算术运算指令</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter05.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle05.gif" width="778"></p>
    </td>  
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0" id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0" id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0" id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td>  
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → <a href="05-2.htm"> 指令系统</a> → 算术运算指令</td>                                                
    <td width="50%">               
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      -->     
  <select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id=Chapter1 size="1">       
    <option selected value="#">课件章节</option>
    <option value="course.htm">网络课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>
    <option value="02-1.htm">第2章 CPU资源和存储器</option>
    <option value="03-1.htm">第3章 操作数的寻址方式</option>
    <option value="04-1.htm">第4章 标识符和表达式</option>
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>
    <option value="06-1.htm">第6章 程序的基本结构</option>
    <option value="07-1.htm">第7章 子程序和库</option>
    <option value="08-1.htm">第8章 输入输出和中断</option>
    <option value="09-1.htm">第9章 宏</option>
    <option value="10-1.htm">第10章 应用程序的设计</option>
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></td>
  </tr>
</table>
  
<h3>5.2.3 算术运算指令</h3>                                       
<p style="text-indent: 21.25pt">算术运算指令是反映<font color="#FF0000">CPU</font>计算能力的一组指令，也是编程时经常使用的一组指令。它包括：加、减、乘、除及其相关的辅助指令。</p>     
<p style="text-indent: 21.25pt">该组指令的操作数可以是8位、16位和32位(80386+)。当存储单元是该类指令的操作数时，该操作数的寻址方式可以是任意一种存储单元寻址方式。</p>     
<p style="text-indent: 21.25pt"><font color="#FF00FF">1、加法指令</font></p>     
<p style="text-indent: 21.25pt"><img border="0" src="TextBookIMG/Ball3.gif" width="12">、加法指令<font color="#FF0000">ADD</font>(ADD Binary                                          
Numbers Instruction)</p>                                        
<p style="margin-left: 40pt">指令的格式：ADD&nbsp; Reg/Mem, Reg/Mem/Imm<br>                                     
受影响的标志位：AF、CF、OF、PF、SF和ZF<br>   
指令的功能是把源操作数的值加到目的操作数中。</p>      
<p style="text-indent: 21.25pt"><img border="0" src="TextBookIMG/Ball3.gif" width="12">、带进位加指令<font color="#FF0000">ADC</font>(ADD                                          
With Carry Instruction)</p>                                         
<p style="margin-left: 40pt">指令的格式：ADC&nbsp; Reg/Mem, Reg/Mem/Imm<br>                                     
受影响的标志位：AF、CF、OF、PF、SF和ZF<br>   
指令的功能是把源操作数和进位标志位CF的值(0/1)一起加到目的操作数中。</p>      
<p style="text-indent: 21.25pt"><img border="0" src="TextBookIMG/Ball3.gif" width="12">、加1指令<font color="#FF0000">INC</font>(Increment by 1                                          
Instruction)</p>       
<p style="margin-left: 40pt">指令的格式：INC&nbsp; Reg/Mem<br>                                     
受影响的标志位：AF、OF、PF、SF和ZF，不影响CF<br>   
指令的功能是把操作数的值加1。</p>      
<p style="text-indent: 21.25pt"><img border="0" src="TextBookIMG/Ball3.gif" width="12">、交换加指令<font color="#FF0000">XADD</font>(Exchange                                          
and Add)</p>                                         
<p style="margin-left: 40pt">指令的格式：XADD&nbsp; Reg/Mem, Reg　　　　　　;80486+<br>
受影响的标志位：AF、CF、OF、PF、SF和ZF<br>
指令的功能是先交换两个操作数的值，再进行算术“加”法操作。</p>   
<p>例5.3 已知有二个32位数d1和d2(用数据类型<font color="#FF0000">DD</font>说明)，编写程序片段把d2的值加到d1中。</p>                                   
<table border="0" width="100%" cellspacing="0" cellpadding="2">
  <tr>
    <td width="100%" colspan="4">解：32位数d1和d2在内存中如下所示。
      <div align="center">
        <center>
        <table border="1" width="50%" cellspacing="0" cellpadding="0">
          <tr>
            <td width="9%" align="center">……</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">……</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="9%" align="center">　</td>
            <td width="10%" align="center">……</td>
          </tr>
        </table>
        </center>
      </div>
      <div align="center">
        <center>
        <table border="0" width="52%" cellspacing="0">
          <tr>
            <td width="9%"></td>
            <td width="91%"><img border="0" src="TextBookIMG/05-06-2.gif" width="186"></td>
          </tr>
        </table>
        </center>
      </div>
    </td>
  </tr>
  <tr>
    <td width="6%" rowspan="11" valign="top"></td>
    <td width="94%" colspan="3">方法1：用16位寄存器编写程序</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="26%"> AX, word ptr d1</td> 
    <td width="62%">    
;由于d1是双字类型，必须使用强制类型说明符。以下同。</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="26%"> DX, word ptr d1+2</td> 
    <td width="62%">    
;(<font color="#FF0000">DX,AX</font>)构成一个32位数据</td>
  </tr>
  <tr>
    <td width="6%">ADD</td>
    <td width="26%"> AX, word ptr d2</td> 
    <td width="62%">    
;低字相加</td>
  </tr>
  <tr>
    <td width="6%">ADC</td>
    <td width="26%"> DX, word ptr d2+2</td> 
    <td width="62%">    
;高字相加。在低字相加时，有可能会产生“进位”</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="26%"> word ptr d1, AX</td> 
    <td width="62%">    
;低字送给d1的低字</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="26%"> word ptr d1+2, DX</td> 
    <td width="62%">    
;高字送给d1的高字</td>
  </tr>
  <tr>
    <td width="94%" colspan="3" valign="bottom">方法2：用32位寄存器编写程序</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="88%" colspan="2"> EAX, d1</td> 
  </tr> 
  <tr> 
    <td width="6%">ADD</td>
    <td width="88%" colspan="2"> EAX, d2</td> 
  </tr> 
  <tr> 
    <td width="6%">MOV</td>
    <td width="88%" colspan="2"> d1, EAX</td> 
  </tr> 
</table> 
<p style="text-indent: 21.25pt">从上面两段程序不难看出：用32位寄存器来处理32位数据显得简单、明了，而16位微机虽然也能处理32位数据，但做起来就要复杂一些。</p>  
       
<p style="text-indent: 21.25pt">下面是学习和掌握加法类指令的控件，可模拟执行ADD、ADC、INC、XADD、<a href="05-2-02.htm">CLC、STC和CMC</a>等指令。用鼠标左键单击寄存器列表框中指定的寄存器，则可修改其值。后面其它控件的有关操作与此相一致，不再说明。</p>  
       
<p style="text-indent: 21.25pt" align="center">
<object classid="clsid:E73DD185-CF0D-4D29-9A78-A72C5BF7D1B9" id="ADD1" width="400" height="243">
</object>
</p>  
       
<p style="TEXT-INDENT: 21.25pt" align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=5&amp;sort=date"><IMG border=0  id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="05-2-02.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="05-2-031.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>                
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->   
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>  
             
</body>  
  
</html>  
