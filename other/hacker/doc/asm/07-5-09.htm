<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>7.5.9 子程序调用伪指令</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter07.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle07.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0" id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0"  id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0"  id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → <a href="07-5-01.htm"> 子程序的完全定义</a>                              
 → 调用伪指令</td>                                   
    <td width="50%">      
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
   
<h3>7.5.9 子程序的调用伪指令</h3>                       
<p style="text-indent: 21.25pt">子程序调用伪指令INVOKE与子程序的调用指令<a href="07-2.htm">CALL</a>在功能上是一致的，但它使汇编语言的子程序调用方法高级语言化，程序员可不用理会一些调用细节问题。</p>
<p style="text-indent: 21.25pt">调用伪指令INVOKE的使用格式如下：</p>
<p style="margin-left: 40pt">INVOKE&nbsp; expression [, arguments]</p>                        
<p style="text-indent: -31pt; margin-left: 52pt">其中：expression―地址表达式，通常为子程序名；<br>
arguments―传递的各参数之间用逗号','分开，参数可以是寄存器、表达式或ADDR                        
标识符等。</p>
<p style="text-indent: 21.25pt">该伪指令是调用基于堆栈的子程序的方法，它把所有参数压栈，子程序结束时，又把参数自动弹出堆栈。</p>
<p style="text-indent: 21.25pt">在参数传递时，汇编程序将根据子程序的原型进行数据类型检查。若需要进行参数类型转换的话，汇编程序则会自动生成一段代码来满足其数据类型转换的要求。</p>
<p style="text-indent: 21.25pt">例如：</p>
<p style="margin-left: 40pt">INVOKE&nbsp; TEST, AX, 12+34, ADDR MSG</p>                        
<p style="text-indent: 21.25pt">其中：TEST是子程序名，寄存器AX和表达式“12+34”是参数，“ADDR                         
MSG”是传递变量MSG的地址。</p>
<p>例7.6 编写一个累加参数数值的子程序。其中参数的个数不定，参数的个数由第一个参数来确定。</p>                       
<p>解：</p>
<table border="0" width="100%" cellpadding="0" cellspacing="0">
  <tr>
    <td width="7%" rowspan="16" valign="top"></td>
    <td width="9%" rowspan="2" valign="top"></td>
    <td width="84%" colspan="3">.MODEL&nbsp; SMALL<br>                       
      .STACK&nbsp; 256<br>                      
      .CODE</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">;第一个参数parmcount确定其后面参数parmvalues中所含参数的个数</td>
  </tr>
  <tr>
    <td width="9%" rowspan="8" valign="top">   
      ADDUP</td>
    <td width="84%" colspan="3">PROC　NEAR &nbsp;C, parmcount:WORD, parmvalues:VARARG</td>                        
  </tr>
  <tr>
    <td width="8%">XOR</td>
    <td width="76%" colspan="2">AX, AX</td>  
  </tr>
  <tr>
    <td width="8%">XOR</td>
    <td width="76%" colspan="2">SI, SI</td>  
  </tr>
  <tr>
    <td width="8%">MOV</td>
    <td width="76%" colspan="2">CX, parmcount</td>  
  </tr>
  <tr>
    <td width="84%" colspan="3">.REPEAT</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">　 ADD　AX, parmvalues[SI]<br>                        
      　 ADD　SI, 2</td>                      
  </tr>
  <tr>
    <td width="84%" colspan="3">.UNTILCXZ</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">RET</td>
  </tr>
  <tr>
    <td width="9%" rowspan="6" valign="top">    
      ADDUP</td>
    <td width="84%" colspan="3">ENDP</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">.STARTUP</td>
  </tr>
  <tr>
    <td width="8%">INVOKE</td>
    <td width="26%">ADDUP,     
      3, 5, 2, 4</td> 
    <td width="50%">;调用子程序ADDUP，计算5+2+4</td>
  </tr>
  <tr>
    <td width="8%">INVOKE</td>
    <td width="26%">ADDUP, 4, 1, 2, 3, 4</td> 
    <td width="50%">;调用子程序ADDUP，计算1+2+3+4</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">.EXIT 0</td> 
  </tr>
  <tr>
    <td width="84%" colspan="3">.END</td>
  </tr>
</table>
      
<p align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=7&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="07-5-07.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="07-5-10.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>   
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->    
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>  
      
</body>      
      
</html>      
