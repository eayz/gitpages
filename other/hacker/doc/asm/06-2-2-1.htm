<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>6.2.2 分支结构</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter06.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle06.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0"  id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0"  id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → <a href="06-2-1.htm">程序的基本结构</a> → 分支结构</td>                                    
    <td width="50%">             
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
    
<p>例6.7 把下列C语言的语句改写成等价的汇编语言程序段(不考虑运算过程中的溢出)。</p>                        
<p style="margin-left: 60pt">If (a+b &gt; 0 &amp;&amp; c%2 ==                         
0) a = 62;<br>                           
else a = 21;</p>                             
<p>其中：变量a，b和c都是有符号的整型(int)变量。</p>     
<table border="0" width="100%" cellspacing="0" cellpadding="0">     
  <tr>     
    <td width="100%" colspan="5">解：</td>     
  </tr>     
  <tr>     
    <td width="8%" rowspan="19" valign="top"></td>     
    <td width="8%" rowspan="6" valign="top">DATA1</td>     
    <td width="84%" colspan="3">SEGMENT</td>     
  </tr>     
  <tr>     
    <td width="84%" colspan="3">…</td>     
  </tr>     
  <tr>     
    <td width="7%" >A</td>   
    <td width="77%" colspan="2">DW　?</td>
  </tr>
  <tr>
    <td width="7%">B</td>
    <td width="77%" colspan="2">DW　?</td>
  </tr>
  <tr>
    <td width="7%">C</td>
    <td width="77%" colspan="2">DW　?</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">…</td>
  </tr>
  <tr>
    <td width="8%">DATA1</td>
    <td width="84%" colspan="3">ENDS</td>
  </tr>
  <tr>
    <td width="8%" rowspan="9" valign="top">CODE1</td>
    <td width="84%" colspan="3">SEGMENT</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">…</td>
  </tr>
  <tr>
    <td width="7%">MOV</td>
    <td width="77%" colspan="2"> AX, A</td> 
  </tr> 
  <tr> 
    <td width="7%">ADD</td>
    <td width="77%" colspan="2"> AX, B</td> 
  </tr> 
  <tr> 
    <td width="7%">JLE</td>
    <td width="17%"> _ELSE</td>
    <td width="60%"> ;ADD指令会改变算术标志位 </td>
  </tr>
  <tr>
    <td width="7%">TEST</td>
    <td width="17%"> C, 1</td>  
    <td width="60%"> ;C%2==0，也就是：看C的最低位是否为0</td> 
  </tr> 
  <tr> 
    <td width="7%">JNZ</td> 
    <td width="77%" colspan="2"> _ELSE</td> 
  </tr> 
  <tr> 
    <td width="7%">MOV</td> 
    <td width="77%" colspan="2"> A, 62D</td>   
  </tr>   
  <tr>   
    <td width="7%">JMP</td> 
    <td width="77%" colspan="2"> NEXT</td> 
  </tr> 
  <tr> 
    <td width="8%" valign="top">_ELSE:&nbsp;</td>  
    <td width="7%">MOV</td> 
    <td width="77%" colspan="2">A, 21D</td>  
  </tr>  
  <tr>  
    <td width="8%" valign="top">NEXT:</td>  
    <td width="84%" colspan="3">…</td>  
  </tr>  
  <tr>  
    <td width="8%" valign="top">CODE1</td> 
    <td width="84%" colspan="3">ENDS</td> 
  </tr>  
</table>  
<p>例6.8 用地址转移表实现下列C语言的switch语句，其中：变量A和B是有符号的整型(int)变量。</p>                        
<table border="0" width="100%" cellspacing="0" cellpadding="2">
  <tr>
    <td width="37%" valign="top">
      <table border="0" width="100%" cellspacing="0" cellpadding="0">
        <tr>
          <td width="9%" rowspan="15" valign="top"></td>
          <td width="24%">switch</td>
          <td width="67%"> (a%8)</td>
        </tr>
        <tr>
          <td width="24%" rowspan="2" valign="top">{case 0:</td>  
          <td width="67%">b = 32;</td>  
        </tr> 
        <tr> 
          <td width="67%">break;</td>
        </tr>
        <tr>
          <td width="91%" colspan="2">case 1:</td>  
        </tr> 
        <tr> 
          <td width="24%" rowspan="2" valign="top">case 2:</td>  
          <td width="67%">b = a + 43;</td>  
        </tr> 
        <tr> 
          <td width="67%">break;</td>
        </tr>
        <tr>
          <td width="24%" rowspan="2" valign="top">case 3:</td>  
          <td width="67%">b = 2*a;</td>  
        </tr> 
        <tr> 
          <td width="67%">break;</td>
        </tr>
        <tr>
          <td width="24%" rowspan="2" valign="top">case 4:</td>  
          <td width="67%">b--;</td>
        </tr>
        <tr>
          <td width="67%" valign="top">break;</td>
        </tr>
        <tr>
          <td width="91%" colspan="2">case 5:</td>  
        </tr> 
        <tr> 
          <td width="91%" colspan="2">case 6:</td>  
        </tr> 
        <tr> 
          <td width="24%">case 7:</td>  
          <td width="67%">printf(“Function 5_6_7”);</td>  
        </tr> 
        <tr> 
          <td width="24%"></td>
          <td width="67%">break;</td>
        </tr>
        <tr>
          <td width="24%">}</td>
          <td width="67%"></td>
        </tr>
      </table>
    </td>
    <td width="63%" valign="top">
      <table border="0" width="100%" cellspacing="0" cellpadding="0">
        <tr>
          <td width="100%" colspan="5">解：</td>
        </tr>
        <tr>
          <td width="7%" rowspan="32" valign="top"></td>
          <td width="12%" rowspan="8" valign="top">DATA1</td>
          <td width="83%" colspan="3">SEGMENT</td>
        </tr>
        <tr>
          <td width="83%" colspan="3">…</td>
        </tr>
        <tr>
          <td width="8%">A</td>
          <td width="75%" colspan="2">DW　?</td>
        </tr>
        <tr>
          <td width="8%">B</td>
          <td width="75%" colspan="2">DW　?</td>
        </tr>
        <tr>
          <td width="8%">Table</td>
          <td width="75%" colspan="2">DW　case0. case12, case12, case3</td>                         
        </tr>  
        <tr>  
          <td width="8%"></td> 
          <td width="75%" colspan="2">DW　case4, case567, case567, case567</td>                         
        </tr>  
        <tr>  
          <td width="8%">MSG</td> 
          <td width="75%" colspan="2">DB　'Function 5_6_7$'</td>                         
        </tr>  
        <tr>  
          <td width="83%" colspan="3">…</td> 
        </tr> 
        <tr> 
          <td width="12%">DATA1</td> 
          <td width="83%" colspan="3">ENDS</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="7" valign="top">CODE1</td> 
          <td width="83%" colspan="3">SEGMENT</td> 
        </tr> 
        <tr> 
          <td width="83%" colspan="3">…</td> 
        </tr> 
        <tr> 
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2"> AX, A</td>   
        </tr>  
        <tr>  
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2"> BX, AX</td>   
        </tr>  
        <tr>  
          <td width="8%">AND</td> 
          <td width="18%">BX, 7</td>   
          <td width="57%">;得到BX的低三位，实现a%8的计算</td> 
        </tr> 
        <tr> 
          <td width="8%">SHL</td> 
          <td width="18%">&nbsp;BX, 1</td>                         
          <td width="57%"> ;由于地址表是字类型，其下标要乘2</td> 
        </tr> 
        <tr> 
          <td width="8%">JMP</td> 
          <td width="18%"> Table[BX]</td> 
          <td width="57%">;利用地址表实现多路转移</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="2" valign="top">case0:</td> 
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2">B, 32D</td>   
        </tr>  
        <tr>  
          <td width="8%">JMP</td> 
          <td width="75%" colspan="2">next</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="3" valign="top">case12:</td> 
          <td width="8%">ADD</td> 
          <td width="75%" colspan="2">AX, 43D</td>   
        </tr>  
        <tr>  
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2">B, AX</td>   
        </tr>  
        <tr>  
          <td width="8%">JMP</td> 
          <td width="75%" colspan="2"> next</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="3" valign="top">case3:</td> 
          <td width="8%">SHL</td> 
          <td width="75%" colspan="2">AX, 1</td>   
        </tr>  
        <tr>  
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2">B, AX</td>   
        </tr>  
        <tr>  
          <td width="8%">JMP</td> 
          <td width="75%" colspan="2"> next</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="2" valign="top">case4:</td> 
          <td width="8%">DEC</td> 
          <td width="75%" colspan="2">B</td> 
        </tr> 
        <tr> 
          <td width="8%">JMP</td> 
          <td width="75%" colspan="2">next</td> 
        </tr> 
        <tr> 
          <td width="12%" rowspan="4" valign="top">case567:</td> 
          <td width="8%">LEA&nbsp;</td> 
          <td width="75%" colspan="2">DX, MSG</td>                         
        </tr>  
        <tr>  
          <td width="8%">MOV</td> 
          <td width="75%" colspan="2">AH, 9</td>   
        </tr>  
        <tr>  
          <td width="8%">INT</td> 
          <td width="75%" colspan="2"> 21H</td> 
        </tr> 
        <tr> 
          <td width="8%">JMP</td> 
          <td width="75%" colspan="2"> next</td> 
        </tr> 
        <tr> 
          <td width="12%">next:</td> 
          <td width="83%" colspan="3">…</td> 
        </tr> 
        <tr> 
          <td width="12%">CODE1</td> 
          <td width="83%" colspan="3">ENDS</td> 
        </tr> 
      </table> 
    </td> 
  </tr> 
</table> 
<p style="text-indent: 21.25pt">用地址表实现多路转移的关键在于：转移入口的地址表和转移情况可整数化。如果这二个要求有一个不满足，或很难构造，则无法使用该方法。</p>     
         
<p align="right">                    
<a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=6&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="06-2-2.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="06-2-2-2.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>   
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->     
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>     
         
</body>         
         
</html>         
