<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>5.2.1-取有效地址指令</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter05.js"></script>
<SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript>
<!--

function LEA_onmouseover() {
	LEA.src = "textbookIMG\\05-04-d.gif";
}

function LEA_onmouseout() {
	LEA.src = "textbookIMG\\05-04.gif";
}

function LDS32_onmouseover() {
	LDS32.src = "textbookIMG\\05-05A-d.gif";
}

function LDS32_onmouseout() {
	LDS32.src = "textbookIMG\\05-05A.gif";
}

function LDS48_onmouseover() {
	LDS48.src = "textbookIMG\\05-05B-d.gif";
}

function LDS48_onmouseout() {
	LDS48.src = "textbookIMG\\05-05B.gif";
}
//-->
</SCRIPT>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle05.gif" width="778"></p>
    </td>  
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0" id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0" id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0" id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td>  
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → <a href="05-2.htm">指令系统</a> → 取有效地址指令</td>                                                   
    <td width="50%">           
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      -->     
  <select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id=Chapter1 size="1">       
    <option selected value="#">课件章节</option>
    <option value="course.htm">网络课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>
    <option value="02-1.htm">第2章 CPU资源和存储器</option>
    <option value="03-1.htm">第3章 操作数的寻址方式</option>
    <option value="04-1.htm">第4章 标识符和表达式</option>
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>
    <option value="06-1.htm">第6章 程序的基本结构</option>
    <option value="07-1.htm">第7章 子程序和库</option>
    <option value="08-1.htm">第8章 输入输出和中断</option>
    <option value="09-1.htm">第9章 宏</option>
    <option value="10-1.htm">第10章 应用程序的设计</option>
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></td>
  </tr>
</table>
  
<p style="text-indent: 21.25pt"><font color="#FF00FF">4、取有效地址指令LEA(Load                                                  
Effective Address)</font></p>                                                 
<table border="0" width="100%" cellspacing="1">
  <tr>
    <td width="69%" valign="top">          
<p style="text-indent: 21.25pt">指令<font color="#FF0000">LEA</font>是把一个内存变量的有效地址送给指定的寄存器。其指令格式如下：</p>     
<p style="margin-left: 40pt">LEA　Reg, Mem</p>                                                 
<p style="text-indent: 21.25pt">该指令通常用来对指针或变址寄存器<font color="#FF0000">BX</font>、<font color="#FF0000">DI</font>或<font color="#FF0000">SI</font>等置初值之用。其功能如右图所示。</p>     
<p style="text-indent: 21.25pt">例如：</p>     
    </td>
    <td width="31%">
      <p align="center"><img border="0" src="TextBookIMG/05-04.gif" width="168" id=LEA LANGUAGE=javascript onmouseover="return LEA_onmouseover()" onmouseout="return LEA_onmouseout()"></p>
      <p align="center">图5.4 LEA指令的功能示意图</td>                                      
  </tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="2">     
  <tr>     
    <td width="6%" valign="top" rowspan="5"></td>     
    <td width="94%" colspan="2">…</td>     
  </tr>     
  <tr>     
    <td width="8%">BUFFER</td>     
    <td width="86%"> DB&nbsp; 100 DUP(?)</td>                                                 
  </tr>       
  <tr>       
    <td width="94%" colspan="2">…</td>     
  </tr>     
  <tr>     
    <td width="8%">LEA</td>     
    <td width="86%">      
BX, BUFFER　　　　　;把字节变量BUFFER在数据段内的偏移量送给BX</td>
  </tr>
  <tr>
    <td width="94%" colspan="2">…</td>
  </tr>
</table>
<p style="text-indent: 21.25pt">问题：指令“LEA&nbsp; BX BUFFER”和“MOV&nbsp;                                           
BX, OFFSET BUFFER”的执行效果是一样的吗？指令“LEA BX,[BX+200]”和“MOV                                 
BX,OFFSET [BX+200]”二者都正确吗？</p>                                         
<p style="text-indent: 21.25pt"><a name="LoadSEG"><font color="#FF00FF">5、取段寄存器指令(Load                                                  
Segment Instruction)</font></a></p>                                                 
<p style="text-indent: 21.25pt">该组指令的功能是把内存单元的一个“低字”传送给指令中指定的16位寄存器，把随后的一个“高字”传给相应的段寄存器(<font color="#FF0000">DS</font>、<font color="#FF0000">ES</font>、<font color="#FF0000">FS</font>、<font color="#FF0000">GS</font>和<font color="#FF0000">SS</font>)。其指令格式如下：</p>     
<p style="margin-left: 40pt">LDS/LES/LFS/LGS/LSS　Reg, Mem</p>                                                 
<p style="text-indent: 21.25pt">指令<font color="#FF0000">LDS</font>(Load Data Segment Register)和<font color="#FF0000">LES</font>(Load                                                
Extra Segment Register)在<font color="#FF0000">8086CPU</font>中就存在，而<font color="#FF0000">LFS</font>和<font color="#FF0000">LGS</font>(Load Extra Segment                                                
Register)、<font color="#FF0000">LSS</font>(Load Stack Segment Register)是<font color="#FF0000">80386</font>及其以后<font color="#FF0000">CPU</font>中才有的指令。</p>                                             
<p style="text-indent: 21.25pt">若Reg是16位寄存器，那么，Men必须是32位指针；若Reg是32位寄存器，那么，Men必须是48位指针，其低32位给指令中指定的寄存器，高16位给指令中的段寄存器。指令的执行结果如图5.5所示。</p>            
<table border="0" width="100%" cellspacing="1">
  <tr>
    <td width="50%">
      <p align="center"><img border="0" src="TextBookIMG/05-05A.gif" id=LDS32 LANGUAGE=javascript onmouseover="return LDS32_onmouseover()" onmouseout="return LDS32_onmouseout()" width="210"></p>
      <p align="center">(a) 32位指针</td>                                      
    <td width="50%">
      <p align="center"><img border="0" src="TextBookIMG/05-05B.gif" id=LDS48 LANGUAGE=javascript onmouseover="return LDS48_onmouseover()" onmouseout="return LDS48_onmouseout()" width="256"></p>
      <p align="center">(b) 48位指针</td>                                      
  </tr>
  <tr>
    <td width="100%" colspan="2">
<p align="center">图5.5、LDS指令的执行步骤示意图</p>
    </td>          
  </tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="2">     
  <tr>     
    <td width="100%" valign="top" colspan="3">     
<p style="text-indent: 21.25pt">例如：</p>     
    </td>     
  </tr>     
  <tr>     
    <td width="6%" valign="top" rowspan="5"></td>     
    <td width="94%" colspan="2">…</td>     
  </tr>     
  <tr>     
    <td width="94%" colspan="2">POINTER　DD　12345678H</td>   
  </tr>
  <tr>
    <td width="94%" colspan="2">…</td>
  </tr>
  <tr>
    <td width="6%">LDS</td>
    <td width="88%"> 
BX, POINTER</td>  
  </tr> 
  <tr> 
    <td width="94%" colspan="2">…</td>
  </tr>
  <tr>
    <td width="100%" valign="top" colspan="3">
<p style="text-indent: 21.25pt">指令的执行结果如图5.5所示。各寄存器的内容分别为：(BX)=5678H，(DS)=1234H。</p>
    </td>
  </tr>
</table>
 
<p style="TEXT-INDENT: 21.25pt">下面控件是学习和掌握<a href="05-2.htm#MOVS">MOV</a>、<a href="05-2-011.htm">MOVSX/MOVZX</a>、<a href="05-2-011.htm#XCHG">XCHG</a>、<a href="05-2-012.htm">LEA</a>、LDS/LES/LFS/LGS/LSS指令的，它可检查用户输入这些指令的合法性，并对合法的指令显示其执行的结果。</p>  
             
<p style="TEXT-INDENT: 21.25pt"><font color="#008080">注意：如果指令中含有表示内存单元的寻址方式，那么其控件中的&quot;内存单元的类型&quot;即表示该指令中内存单元的数据类型。</font></p>  
             
<p align="center">
<object classid="clsid:A2D4B1F2-6455-41D9-B992-AE427AA6405F" id="Transfer1" width="400" height="243">
</object>
</p>  
             
<p style="TEXT-INDENT: 21.25pt" align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=5&amp;sort=date"><IMG border=0  id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="05-2-011.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="05-2-013.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>                          
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->   
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>  
             
</body>  
  
</html>  
