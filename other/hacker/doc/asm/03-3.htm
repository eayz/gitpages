<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>3.3 直接寻址方式</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter03.js"></script>
<SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript>
<!--

function Address3_onmouseover() {
	Address3.src="TextbookIMG\\03-2-d.gif" 
}

function Address3_onmouseout() {
	Address3.src="TextbookIMG\\03-2.gif" 
}

//-->
</SCRIPT>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <IMG border=0 height=70 src="images/btitle03.gif" width=778></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><A href="index.htm"><IMG border=0 height=28 id=Home0 language=javascript onmouseout="return Home0_onmouseout()" onmouseover="return Home0_onmouseover()" src="Button/home1.gif" width=96></a><A href="homework.htm"><IMG border=0  height=28 id=Homework language=javascript  onmouseout ="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width=96></a><a href="bbs/index.asp"><IMG border=0  height=28 id=Discuss language=javascript  onmouseout ="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width=96></a><A href="question.htm"><IMG border=0  height=28 id=Problem language=javascript  onmouseout ="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width=96></a><A href="test.asp"><IMG border=0  height=28 id=Test language=javascript  onmouseout ="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width=96></a><A href="search.htm"><IMG border=0  height=28 id=Search language=javascript  onmouseout ="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width=96></a></p></td> 
  </tr>
  <tr>
    <td width="50%"><a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a> 
      → 直接寻址方式</td>                                    
    <td width="50%">                
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      -->     
  <select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id=Chapter1 size="1">       
    <option selected value="#">课件章节</option>
    <option value="course.htm">网络课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>
    <option value="02-1.htm">第2章 CPU资源和存储器</option>
    <option value="03-1.htm">第3章 操作数的寻址方式</option>
    <option value="04-1.htm">第4章 标识符和表达式</option>
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>
    <option value="06-1.htm">第6章 程序的基本结构</option>
    <option value="07-1.htm">第7章 子程序和库</option>
    <option value="08-1.htm">第8章 输入输出和中断</option>
    <option value="09-1.htm">第9章 宏</option>
    <option value="10-1.htm">第10章 应用程序的设计</option>
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p></td>
  </tr>
</table>
    
<h2>3.3 直接寻址方式</h2>                                               
<p style="TEXT-INDENT: 21.25pt">指令所要的操作数存放在内存中，在指令中直接给出该操作数的有效地址，这种寻址方式为直接寻址方式。</p>          
<p style="TEXT-INDENT: 21.25pt">在通常情况下，操作数存放在数据段中，所以，其物理地址将由数据段寄存器<font color="#ff0000">DS</font>和指令中给出的有效地址直接形成，但如果使用段超越前缀，那么，操作数可存放在其它段。</p>          
<p style="text-indent: -30pt; margin-left: 30pt">例3.1 假设有指令：MOV BX, [1234H]，在执行时，(DS)=2000H，内存单元21234H的值为5213H。问该指令执行后，BX的值是什么？</p>                                               
<table border="0" width="100%" cellspacing="0" cellpadding="2">          
  <tr>          
    <td width="50%">          
      <p style="MARGIN-LEFT: 20pt; TEXT-INDENT: -20pt">解：根据直接寻址方式的寻址规则，把该指令的具体执行过程用图3.2来表示。         
      <p style="TEXT-INDENT: 21.25pt">从图3.2中，可看出执行该指令要分三部分：</p></td>         
    <td width="50%" rowspan="5">         
      <p align="center"><IMG border=0 id=Address3 src="TextBookIMG/03-2.gif"  LANGUAGE=javascript onmouseover="return Address3_onmouseover()" onmouseout="return Address3_onmouseout()" width="352"></p>         
      <p align="center">图3.2 直接寻址方式的存储和执行示意图</p> </td>                                             
  </tr>         
  <tr>         
    <td width="50%">         
      <p style="text-indent: -25pt; margin-left: 45pt"><img border="0" src="TextBookIMG/redpoint.gif" width="20">、由于1234H是一个直接地址，它紧跟在指令的操作码之后，随取指令而被读出；</p></td>       
  </tr>       
  <tr>       
    <td width="50%">       
      <p style="text-indent: -25pt; margin-left: 45pt"><img border="0" src="TextBookIMG/redpoint.gif" width="20">、访问数据段的段寄存器是<font color="#FF0000">DS</font>，所以，用<font color="#FF0000">DS</font>的值和偏移量1234H相加，得存储单元的物理地址：21234H；</p></td>      
  </tr>      
  <tr>      
    <td width="50%">      
      <p style="text-indent: -25pt; margin-left: 45pt"><img border="0" src="TextBookIMG/redpoint.gif" width="20">、取单元21234H的值5213H，并按“高高低低”的原则存入寄存器BX中。</p></td>      
  </tr>      
  <tr>      
    <td width="50%">      
      <p style="TEXT-INDENT: 21.25pt">所以，在执行该指令后，BX的值就为5213H。</p>      
    </td>                   
  </tr>         
</table>         
                 
      <p style="TEXT-INDENT: 21.25pt">由于数据段的段寄存器默认为<font color="#ff0000">DS</font>，如果要指定访问其它段内的数据，可在指令中用<span style="background-color: #00FFFF"><font color="#FF00FF">段前缀的方式</font></span>显式地书写出来。</p>      
      <p style="TEXT-INDENT: 21.25pt"><a name="段前缀">下面指令的目标操作数就是带有段前缀的直接寻址方式。</a></p>      
      <p style="margin-left: 70pt">MOV　<font color="#FF0000">ES</font>:[1000H], AX</p>                                    
                 
<p style="text-indent: 21.25pt">直接寻址方式常用于处理内存单元的数据，其操作数是内存变量的值，该寻址方式可在<font color="#FF0000">64K</font>字节的段内进行寻址。</p>      
<p style="text-indent: -31pt; margin-left: 52pt">注意：立即寻址方式和直接寻址方式的书写格式的不同，直接寻址的地址要写在括号“[”，“]”内。在程序中，直接地址通常用内存变量名来表示，如：MOV                                            
BX, VARW，其中，<font color="#FF0000">VARW</font>是内存字变量。</p>                                         
<p style="text-indent: 21.25pt">试比较下列指令中源操作数的寻址方式(VARW是内存字变量)：</p>     
<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="8%" rowspan="2" valign="top"></td>
    <td width="22%">MOV　AX, 1234H</td>                               
    <td width="28%">MOV　AX, [1234H]</td>                               
    <td width="42%"> ;前者是立即寻址，后者是直接寻址</td>
  </tr>
  <tr>
    <td width="22%">     
MOV　AX, VARW</td>                               
    <td width="28%">MOV　AX,                                         
[VARW]</td>
    <td width="42%">;两者是等效的，均为直接寻址</td>
  </tr>
</table>
          
<p align="right"><A href="index.htm"><IMG border=0 id=Home language=javascript onmouseout="return Home_onmouseout()" onmouseover="return Home_onmouseover()" src="Button/home1.gif" width="96"></a><A href="asp/QuestionIndex.asp-chapter=3&amp;sort=date"><IMG border=0  height=28 id=Question  language=javascript onmouseout="return Question_onmouseout()" onmouseover="return Question_onmouseover()" src="Button/question1.gif" width=96></a><a href="03-2.htm"><IMG border=0 id=PrevPage language=javascript onmouseout="return PrevPage_onmouseout()" onmouseover="return PrevPage_onmouseover()" src="Button/prevpage1.gif" width="96"></a><a href="03-4.htm"><IMG border=0 id=NextPage language=javascript onmouseout="return NextPage_onmouseout()" onmouseover="return NextPage_onmouseover()" src="Button/NextPage1.gif" width="96"></a>                       
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->     
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">          
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>       
    <option value="02-1.htm">第2章 CPU资源和存储器</option>       
    <option value="03-1.htm">第3章 操作数的寻址方式</option>       
    <option value="04-1.htm">第4章 标识符和表达式</option>       
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>       
    <option value="06-1.htm">第6章 程序的基本结构</option>       
    <option value="07-1.htm">第7章 子程序和库</option>       
    <option value="08-1.htm">第8章 输入输出和中断</option>       
    <option value="09-1.htm">第9章 宏</option>       
    <option value="10-1.htm">第10章 应用程序的设计</option>       
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>     
                
</body>         
         
</html>         
