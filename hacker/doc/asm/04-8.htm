<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>4.8 符号定义语句</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter04.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle04.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0"  id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0"  id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96" height="28"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → 符号定义语句</td>                         
    <td width="50%">           
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      -->     
  <select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id=Chapter1 size="1">       
    <option selected value="#">课件章节</option>
    <option value="course.htm">网络课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>
    <option value="02-1.htm">第2章 CPU资源和存储器</option>
    <option value="03-1.htm">第3章 操作数的寻址方式</option>
    <option value="04-1.htm">第4章 标识符和表达式</option>
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>
    <option value="06-1.htm">第6章 程序的基本结构</option>
    <option value="07-1.htm">第7章 子程序和库</option>
    <option value="08-1.htm">第8章 输入输出和中断</option>
    <option value="09-1.htm">第9章 宏</option>
    <option value="10-1.htm">第10章 应用程序的设计</option>
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></td>
  </tr>
</table>
    
<h2>4.8 符号定义语句</h2>                                    
<p style="text-indent: 21.25pt">在程序中，我们经常要使用一些常量或数值表达式，并把它们直接写在指令中，但当需要修改时，就要对它们逐个进行修改，这无疑会增加维护程序的工作量，而且每个常量或表达式所代表的含义也容易遗忘。</p>      
<p style="text-indent: 21.25pt">为了改善程序的可读性，尽量减少维护程序的工作量，汇编语言提供了为常量或表达式定义一个符号名的方法。一旦定义了符号名，在指令中就可直接使用它们。</p>      
<h3>4.8.1 等价语句</h3>                                    
<p style="text-indent: 21.25pt"><font color="#FF00FF">1、一般格式</font></p>      
<p style="text-indent: 21.25pt">等价语句的一般使用格式如下：</p>      
<p style="margin-left: 40pt">符号名　<font color="#FF0000">EQU</font>　表达式</p> 
<p style="text-indent: 21.25pt">作用是左边的符号名代表右边的表达式。</p> 
<p style="text-indent: 21.25pt">注意：等价语句不会给符号名分配存储空间，符号名不能与其它符号同名，也不能被重新定义。</p> 
<p style="text-indent: 21.25pt"><font color="#FF00FF">2、用符号名代表常量或表达式</font></p> 
<p style="text-indent: 21.25pt">当把一个常量或表达式定义成一个具有一定含义的符号名后，在程序中就可以用该符号名来代表该常量或表达式。</p> 
<table border="0" width="100%" cellspacing="0" cellpadding="2"> 
  <tr> 
    <td width="100%" colspan="5"> 
      <p style="text-indent: 21.25pt">例如：</td> 
  </tr> 
  <tr> 
    <td width="8%" rowspan="7" valign="top"></td> 
    <td width="12%">NUMBER</td> 
    <td width="7%">EQU</td> 
    <td width="28%">100</td> 
    <td width="45%">;给缓冲区的长度取一个符号名</td> 
  </tr> 
  <tr> 
    <td width="12%">BUFF_LEN</td> 
    <td width="7%">EQU</td> 
    <td width="73%" colspan="2">NUMBER+2</td> 
  </tr> 
  <tr> 
    <td width="12%">CR</td> 
    <td width="7%">EQU</td> 
    <td width="28%">13</td> 
    <td width="45%">;给“回车”符的<font color="#FF0000">ASCII</font>码定义一个符号名</td> 
  </tr> 
  <tr> 
    <td width="12%">LF</td> 
    <td width="7%">EQU</td> 
    <td width="28%">10</td> 
    <td width="45%">;给“换行”符的<font color="#FF0000">ASCII</font>码定义一个符号名</td> 
  </tr> 
  <tr> 
    <td width="92%" colspan="4">…</td> 
  </tr> 
  <tr> 
    <td width="12%">BUFFER</td> 
    <td width="7%">DB</td> 
    <td width="28%">NUMBER, ?, NUMBER DUP (?)</td>   
    <td width="45%">;用符号名来定义缓冲区</td> 
  </tr> 
  <tr> 
    <td width="92%" colspan="4">…</td> 
  </tr> 
</table> 
<p style="text-indent: 21.25pt"><font color="#FF00FF">3、用符号名代表字符串</font></p> 
<p style="text-indent: 21.25pt">用一个具有一定含义的符号名定义某一个较长的字符串，在随后的程序中就用该符号名。例如：</p> 
<p style="margin-left: 40pt">GREETING　EQU　&quot;How are you!&quot;</p>                  
<p style="text-indent: 21.25pt">在该定义之后，就可使用符号名<font color="#FF0000">GREETING</font>来代表字符串&quot;How                   
are you!&quot;。</p>                  
<p style="text-indent: 21.25pt"><font color="#FF00FF">4、用符号名关键字或指令助忆符</font></p>       
<p style="text-indent: 21.25pt">用一个(组)程序员自己习惯的符号名来代替汇编语言中的关键字或指令助忆符。但在此建议不要这样做，因为程序的编写者习惯，程序的其他阅读者可能会觉得很别扭。</p>      
<p style="text-indent: 21.25pt">例如：</p>      
<p style="margin-left: 40pt">MOVE　　　             
EQU　MOV　　　;给指令MOV取另一个符号名MOVE<br> 
COUNTER　 EQU　CX　　　　;给寄存器CX取一个叫“计数器”的符号名</p> 
<p style="text-indent: 21.25pt">上面的定义只是给原来的助忆符<font color="#FF0000">MOV</font>和<font color="#FF0000">CX</font>起了另一个别名，而原来助忆符<font color="#FF0000">MOV</font>和<font color="#FF0000">CX</font>仍然可以使用，所以，我们可编写如下语句：</p> 
<p style="margin-left: 40pt">MOVE　AX, CX　　　　　　　 ;相当于指令：MOV&nbsp; AX, CX<br>                  
MOV　 COUNTER, BX　　　　;相当于指令：MOV&nbsp;                  
CX, BX</p>                  
<p style="text-indent: 21.25pt"><font color="#FF00FF">5、用符号名定义存储单元的别名</font></p>       
<p style="text-indent: 21.25pt">可对一片存储单元定义另一个数据类型的符号名，有关叙述参见前面的操作符THIS。</p>      
<table border="0" width="100%" cellspacing="0" cellpadding="2">     
  <tr>     
    <td width="100%" colspan="4">      
<p style="text-indent: 21.25pt">例如：</p>      
    </td>     
  </tr>     
  <tr>     
    <td width="8%" rowspan="5" valign="top"></td>     
    <td width="8%">WORD1</td>                
    <td width="26%">EQU　THIS WORD</td>                 
    <td width="58%">          
 ;给后面的字节存储单元取一个字属性的符号名</td>     
  </tr>     
  <tr>     
    <td width="8%">BYTE1</td>                
    <td width="84%" colspan="2">DB　12h, 21h</td>                 
  </tr>         
  <tr>         
    <td width="8%">FLAG</td>      
    <td width="84%" colspan="2">DW　1234H</td>      
  </tr>     
  <tr>     
    <td width="8%">FLAG1</td>                
    <td width="26%">EQU　<font color="#FF0000">byte ptr</font> FLAG</td>                 
    <td width="58%"> ;给FLAG的低字节取一个字节属性的符号名</td>     
  </tr>     
  <tr>     
    <td width="8%">FLAG2</td>                
    <td width="26%">EQU　<font color="#FF0000">byte ptr</font> FLAG+1</td>                 
    <td width="58%"> ;给FLAG的高字节取一个字节属性的符号名</td>     
  </tr>     
</table>     
<p style="text-indent: 21.25pt">有了上述定义后，可编写如下语句：</p>      
<p style="margin-left: 40pt">MOV　AX, WORD1　　　　　 ;执行后，(AX)=2112H<br>          
MOV　BL, FLAG1　　　　　　;执行后，(BL)=34H</p>  
             
<p align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=4&amp;sort=date"><IMG border=0  id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="04-7-2.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="04-8-1.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>                          
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2>                                 
    <option selected value="#">课件章节</option>         
    <option value="course.htm">课件目录</option>         
    <option value="01-1.htm">第1章 预备知识</option>               
    <option value="02-1.htm">第2章 CPU资源和存储器</option>               
    <option value="03-1.htm">第3章 操作数的寻址方式</option>               
    <option value="04-1.htm">第4章 标识符和表达式</option>               
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>               
    <option value="06-1.htm">第6章 程序的基本结构</option>               
    <option value="07-1.htm">第7章 子程序和库</option>               
    <option value="08-1.htm">第8章 输入输出和中断</option>               
    <option value="09-1.htm">第9章 宏</option>               
    <option value="10-1.htm">第10章 应用程序的设计</option>               
    <option value="11-1.htm">第11章 数值运算协处理器</option>         
    <option value="12-1.htm">第12章 汇编语言和C语言</option>         
  </select></p>            
                 
</body>                 
                 
</html>                 
