<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>8.3.8 设置中断向量</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter08.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle08.gif" width="778"></p>
    </td>  
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0"  id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td>  
  </tr>
  <tr>
    <td width="56%"><a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
      → <a href="08-3.htm"> 中断功能的分类</a>  → 设置中断向量</td>                               
    <td width="44%">        
      <p align="right">
      <!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
     
<p style="text-indent: 21.25pt"><font color="#FF00FF">2、设置中断向量</font></p>
<p style="text-indent: 21.25pt"><font color="#FF00FF">(1)、DOS功能调用的方法</font></p>
<p style="text-indent: 21.25pt">中断21H之功能25H可为指定的中断号设置新的入口地址。其使用方法如下：</p>
<p style="margin-left: 40pt">入口参数：AH＝中断号，DS:DX＝中断处理程序的入口地址<br>
出口参数：无</p>
<p>例8.17 用功能调用的方法把子程序NewFunc设置为中断n的中断处理程序。</p>                        
<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="5">解：</td>
  </tr>
  <tr>
    <td width="7%" rowspan="13" valign="top"></td>
    <td width="93%" colspan="4">……</td>
  </tr>
  <tr>
    <td width="9%" rowspan="3" valign="top">NewFunc</td>
    <td width="84%" colspan="3"> PROC</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">……</td>
  </tr>
  <tr>
    <td width="29%" colspan="2">IRET</td>
    <td width="55%">      
;注意其返回指令</td>
  </tr>
  <tr>
    <td width="9%" rowspan="9" valign="top">NewFunc</td>
    <td width="84%" colspan="3"> ENDP</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">……</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="78%" colspan="2"> AX, SEG NewFunc</td> 
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="23%"> DS, AX</td> 
    <td width="55%">      
;设置段地址寄存器</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="23%"> DX, OFFSET NewFunc</td> 
    <td width="55%"> ;设置偏移量</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="23%"> AL, n</td> 
    <td width="55%">      
;这里的n要用具体的中断号来定</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="78%" colspan="2"> AH, 25H</td> 
  </tr>
  <tr>
    <td width="6%">INT</td>
    <td width="78%" colspan="2"> 21H</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">……</td>
  </tr>
</table>
<p style="text-indent: 21.25pt"><font color="#FF00FF">(2)、直接访问存储单元的方法</font></p>
<p>例8.18 用直接访问存储单元的方法把子程序NewFunc设置为中断n的中断处理程序。</p>                        
<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="5">解：</td>
  </tr>
  <tr>
    <td width="7%" rowspan="14" valign="top"></td>
    <td width="93%" colspan="4">……</td>
  </tr>
  <tr>
    <td width="9%">NewFunc</td>
    <td width="84%" colspan="3"> PROC</td>
  </tr>
  <tr>
    <td width="9%" rowspan="3" valign="bottom">NewFunc</td>
    <td width="84%" colspan="3">……</td>
  </tr>
  <tr>
    <td width="37%" colspan="2">IRET</td>
    <td width="47%">      
;注意其返回指令</td>
  </tr>
  <tr>
    <td width="84%" colspan="3"> ENDP</td>
  </tr>
  <tr>
    <td width="9%" rowspan="9" valign="top"></td>
    <td width="84%" colspan="3">……</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="78%" colspan="2"> AX, 0H</td> 
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="78%" colspan="2"> DS, AX</td> 
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="78%" colspan="2"> BX, 4*n</td> 
  </tr>
  <tr>
    <td width="84%" colspan="3">CLI</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="31%"> word ptr [BX], OFFSET NewFunc</td> 
    <td width="47%">      
;设置中断处理程序的偏移量</td>
  </tr>
  <tr>
    <td width="6%">MOV</td>
    <td width="31%"> word ptr [BX+2], SEG NewFunc</td> 
    <td width="47%">      
;设置中断处理程序的段地址</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">STI</td>
  </tr>
  <tr>
    <td width="84%" colspan="3">……</td>
  </tr>
</table>
<p style="text-indent: 21.25pt">在上面程序段中，指令CLI是一条值得注意的指令，它用来确保随后二条MOV指令被连续执行而不被打断。这是因为执行其第一条MOV指令后，原中断向量表中的入口地址就被破坏了，这时，该入口地址既不是指向原处理程序，也不指向新处理程序。如果此刻正巧发生了该类型的中断请求，那么，系统将转向一个非法的位置。如果程序员能确信此时不会发生该类型的中断请求，当然也就不必插入关中断指令。</p>
<p style="text-indent: 21.25pt">后面的指令STI是开中断指令，它允许CPU响应其后的中断请求。</p>
        
<p align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=8&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="08-3-7.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="08-3-7-2.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>&nbsp; 
<!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>   
       
</body>       
       
</html>