<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>8.4 习题</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter08.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle08.gif" width="778"></p>
    </td>  
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0"  id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td>  
  </tr>
  <tr>
    <td width="56%"><a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
      → 习题</td>                     
    <td width="44%">        
      <p align="right">
      <!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
     
<h2><font color="#FF00FF">8.4 习题</font></h2>                
<table border="0" width="100%" cellspacing="3" cellpadding="0">
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.1、简述中断和子程序调用之间的主要区别？</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.2、为什么要区分IRET指令与RET指令?</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.3、编写一个子程序，它可显示以0结尾的字符串。子程序的入口参数DS:DX为待输出字符串的首地址。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -26pt; margin-left: 48pt">8.4、编写一个子程序，用来读入一个键，并在屏幕上按十六进制的形式显示按键的扩展ASCII码，如果按键为普通字符，则不显示。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.5、编写一个程序，在屏幕的右下角闪烁显示编程者自己的姓名，显示颜色自定。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.6、编写一个把屏幕上显示的字母经过大小写转换后再显示的程序。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.7、编写一个程序，它把屏幕上的数字改位蓝绿色背景的红字。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.8、编写一个控制光标位置和形状的程序，该程序具有以下功能：</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 47pt">1)、可用光标移动键↑、↓、←和→来移动光标；</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -20pt; margin-left: 67pt">2)、当光标已在第0列，且按'←'键时，光标定在上一行的最后一列；若已在屏幕的左上角，则光标不动，且给出响铃；按'→'键时的边界处理类似；</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 47pt">3)、当光标在第0行，且按'↑'键时，则光标不动，且给出响铃；按'↓'键时的边界处理类似；</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 47pt">4)、按Home或End键，则光标移到当前行的行首或行尾；</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -20pt; margin-left: 67pt">5)、若按下数字或字母键，则把该字符从当前位置依次显示到屏幕顶(在新位置显示字符时，原位置的符号被抹去)；</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 47pt">6)、按Esc键，程序结束。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.9、交换例8.5和8.6的画线方法，编写相应的子程序VLine和HLine，并验证之。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.10、假设显示器的显示模式设定为12H，编写实现下列功能的程序：</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 55pt">1)、在屏幕中间从上到下显示一条明亮的蓝色线，线宽为1个像素；<br>
      2)、在屏幕底下横向画一条绿色线，线宽为2个像素；<br>
      3)、在屏幕上垂直显示16种颜色，每种颜色宽40个像素；<br>
      4)、设定屏幕背景为白色，在屏幕中间画一条青色线，线宽为10个像素。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.11、对于256色，320X200的显示模式需要多少个字节的内存存放一屏信息?</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.12、为什么在显示数据时必须关闭鼠标?</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.13、编写程序，检测计算机是否已安装了鼠标，并以显示Yes/No来表示检测结果。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.14、编写程序，显示鼠标的按键，若按左键，显示"Left"，若按右键，显示"Right"，按Esc键，程序结束。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.15、编写一个程序，在图形模式下，打开鼠标，并显示鼠标的位置。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -32pt; margin-left: 54pt">8.16、编写一个程序，显示驱动器C根目录下所有EXE文件。提示：用通配符"*.exe"来查找与此匹配的文件名，找到后，显示之。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.17、编写一个程序，显示驱动器C根目录下的所有子目录。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.18、编写一个程序，设置指定目录下的所有文件为只读文件。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.19、编写一个程序，创建一个隐含文件Data.TXT。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.20、编写一个程序，把键盘上输入写入文件File.dat中，类似以下DOS命令：</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 55pt">COPY　con　File.dat</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -32pt; margin-left: 54pt">8.21、使用哪个DOS功能可读取中断向量地址，哪个DOS功能可把新的中断服务程序地址设置为指定中断的入口地址。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -32pt; margin-left: 54pt">8.22、编写一个程序，在程序开始运行时，把中断向量表保存到程序的数据段中，在程序结束前把数据段中的备份恢复到系统中去。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 22pt">8.23、把下列C语言的子程序改写成汇编语言子程序。</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 55pt">1)、取当前光标的位置，并分别存入变量x和y中</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -20pt; margin-left: 95pt">get_cursor(int *x, int *y)<br>                
      {union REGS in, out;<br>                
      &nbsp;in.h.ah = 3;　　　in.h.bh = 0;<br>                
      &nbsp;int86(0x10, &amp;in, &amp;out);<br>                
      &nbsp;*x = out.h.dh;　 *y =                 
      out.h.dl;<br>
      }</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 55pt">2)、把光标设置在(row, col)位置</td>                
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -20pt; margin-left: 95pt">
      locate(int row, int col)<br>                
      {union REGS in, out;<br>                
      &nbsp;in.h.ah = 2;　　 in.h.bh = 0;<br>                
      &nbsp;in.h.dh = row;　 in.h.dl = col;<br>                
      &nbsp;int86(0x10, &amp;in, &amp;out);<br>                
      }</td>
  </tr>
  <tr>
    <td width="100%">
      <p style="margin-left: 55pt">3)、在(row, col)位置显示字符串string</td>                
  </tr>
  <tr>
    <td width="100%">
      <p style="text-indent: -20pt; margin-left: 95pt">
      disp_string(int row, int col, char string[])<br>                
      {struct　REGPACK &nbsp;in, out;<br>                
      &nbsp;int　　 x, y;<br>                
      &nbsp;get_cursor(&amp;x, &amp;y);<br>                
      &nbsp;locate(row, col);<br>                
      &nbsp;in.r_ds = FP_SEG(string);<br>                
      &nbsp;in.r_dx = FP_OFF(string);<br>                
      &nbsp;in.r_ax = 0x900;<br>                
      &nbsp;intr(0x21, &amp;in);<br>                
      &nbsp;locate(x, y);<br>                
      }</td>
  </tr>
</table>
        
<p align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=8&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="08-3-7-2.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="09-1.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>&nbsp; 
<!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>   
       
</body>       
       
</html>