<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>9.1.4 宏的嵌套定义</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter09.js"></script>
<SCRIPT LANGUAGE=javascript>
<!--
function expandIt(el) {
    whichEl = eval(el);
	if (whichEl.style.display == "block") whichEl.style.display = "none";
    else whichEl.style.display = "block"
}

// -->
</SCRIPT>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle09.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0" id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → <a href="09-1.htm"> 宏的定义和引用</a>                 
      → 宏的嵌套定义</td>                                             
    <td width="50%">                    
      <p align="right">
      <!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
   
<h3>9.1.4 宏的嵌套定义</h3>                                         
<p style="text-indent: 21.25pt">宏的嵌套定义有二种方式：宏定义体内引用其它的宏和宏定义体内定义其它的宏。</p>              
<p style="text-indent: 21.25pt"><font color="#FF00FF">1、宏定义体内引用其它的宏</font></p>              
<p style="text-indent: 21.25pt">在宏的定义体中又引用了其它已定义好的宏，这种宏定义方式在实际的编程过程时常会用到。如果被引用的宏还没定义的话，汇编程序将会显示出错信息。</p>              
<table border="0" width="100%" cellspacing="0" cellpadding="0">              
  <tr>              
    <td width="100%" colspan="4">              
      <p style="text-indent: 21.25pt">例如：</td>              
  </tr>              
  <tr>              
    <td width="8%" rowspan="5" valign="top"></td>              
    <td width="6%" rowspan="5" valign="top">ABS</td>              
    <td width="86%" colspan="2">MACRO&nbsp; OPRD1, OPRD2</td>                                            
  </tr>                
  <tr>                
    <td width="86%" colspan="2">…</td>               
  </tr>               
  <tr>               
    <td width="30%"><font color="#FF0000">MOPM</font> SUB, OPRD1, OPRD2&nbsp;</td>                                            
    <td width="56%">;引用前面已定义的宏<a href="09-1-2.htm#MOPM">MOPM</a></td>             
  </tr>             
  <tr>             
    <td width="86%" colspan="2">…</td>             
  </tr>             
  <tr>             
    <td width="86%" colspan="2">ENDM</td>             
  </tr>             
</table>             
<p style="text-indent: 21.25pt">在定义宏ABS时，引用了前面已定义好的宏MOPM。</p>             
<p style="text-indent: 21.25pt"><font color="#FF00FF">2、宏定义体内定义其它的宏</font></p>             
<p style="text-indent: 21.25pt">宏的定义体内又定义了其它宏，只有在先引用了外层的宏定义，才能引用内层的宏，这是因为，当外层宏展开后，内层宏的定义才变得有效。</p>             
<p style="text-indent: 21.25pt">这种定义方式虽然有其好的一面，但它使宏的定义更加隐蔽，削弱了程序的可读性，降低了程序的可维护性，因此，这种宏定义方式在实际的编程中很少使用。</p>             
                
<p>例9.4 假设有三个内存字变量Oprd1，Oprd2和Oprd3，编写宏定义实现下面功能(其中：OP是除加、减之外的二元操作)：</p>                                     
<p align="center">Oprd1 ← Oprd2 OP Oprd3</p>                                           
<table border="0" width="100%" cellspacing="0" cellpadding="0">               
  <tr>               
    <td width="57%" colspan="5">解：</td>               
  </tr>               
  <tr>               
    <td width="57%" colspan="5">               
      <p style="text-indent: 21.25pt">方法1：用宏嵌套定义的方式来实现</td>             
  </tr>             
  <tr>             
    <td width="8%" rowspan="9" valign="top"></td>             
    <td width="8%" rowspan="9" valign="top">OPMM</td>             
    <td width="9%">MACRO</td>             
    <td width="32%" colspan="2">NAME, OP</td>               
  </tr>              
  <tr>              
    <td width="9%" rowspan="7" valign="top">NAME</td>             
    <td width="9%">MACRO</td>             
    <td width="109%">OPRD1, OPRD2, OPRD3</td>               
  </tr>              
  <tr>              
    <td width="9%">PUSH</td>             
    <td width="109%">AX</td>             
  </tr>             
  <tr>             
    <td width="9%">MOV</td>             
    <td width="109%">AX, OPRD2</td>               
  </tr>              
  <tr>              
    <td width="9%">OP</td>             
    <td width="109%">AX, OPRD3</td>               
  </tr>              
  <tr>              
    <td width="9%">MOV</td>             
    <td width="109%">OPRD1, AX</td>               
  </tr>              
  <tr>              
    <td width="9%">POP</td>             
    <td width="109%">AX</td>             
  </tr>             
  <tr>             
    <td width="32%" colspan="2">ENDM</td>             
  </tr>             
  <tr>             
    <td width="41%" colspan="3">ENDM</td>             
  </tr>             
</table>             
<p style="text-indent: 21.25pt">这时，如果要完成下列操作(其中：w1，w2和w3是内存字变量)：</p>             
<p align="center">w1 ← w2 + w3&nbsp;&nbsp;&nbsp; w1 ← w2 OR w3</p>                                           
<p style="text-indent: 21.25pt">那么，可按下列宏引用的方式来完成所需要的功能：</p>               
<table border="0" width="100%" cellspacing="0" cellpadding="0">              
  <tr>              
    <td width="8%" rowspan="4" valign="top"></td>              
    <td width="47%" valign="top">                 
　　<A href="#" onclick="expandIt('OPMM1');return false">OPMM&nbsp;                                   
MADDM, ADD</A>                                   
<div id='OPMM1' class='OPMM1' style="DISPLAY: none">　　1　　MADDM　MACRO                                  
  OPN1, OPN2, OPN3<br>  　　1　　　　　　　PUSH　AX<br>  
  　　1　　　　　　　MOV　 AX, OPN2<br>                                          
  　　1　　　　　　　ADD　  AX, OPN3<br>                                          
  　　1　　　　　　　MOV　 OPN1, AX<br>                                           
  　　1　　　　　　　POP　 AX<br>                                      
  　　1　　　　　　　ENDM</div>     
    </td>   
    <td width="45%" valign="top">;宏引用语句(1)：在宏扩展后将得到一个新的宏定义MADDM――把后二个内存字变量之和赋给第一个内存字变量：</td>  
  </tr>  
  <tr>  
    <td width="47%" valign="top">     
　　<A href="#" onclick="expandIt('OPMM2');return false">OPMM&nbsp;  MORM, OR</A>                                   
<div id='OPMM2' class='OPMM2' style="DISPLAY: none">　　1　　MORM　MACRO OPN1, OPN2, OPN3<br>  　　1　　　　　　PUSH　AX<br>  
  　　1　　　　　　MOV　  AX, OPN2<br>                                          
  　　1　　　　　　OR　　 AX, OPN3<br>                                          
  　　1　　　　　　MOV　 OPN1, AX<br>                                           
  　　1　　　　　　POP　  AX<br>                                        
  　　1　　　　　　ENDM</div>     
     
    </td>   
    <td width="45%" valign="top">;宏引用语句(2)：在宏扩展后将得到另一个新的宏定义MORM――把后二个内存字变量之“逻辑或”赋给第一个内存字变量：</td>  
  </tr>  
  <tr>  
    <td width="47%">     
　　<A href="#" onclick="expandIt('MADDM1');return false">MADDM&nbsp; w1, w2, w3</A>                                  
<div id='MADDM1' class='MADDM1' style="DISPLAY: none">　　1　　　　PUSH&nbsp;　AX<br>  
  　　1　　　　MOV　　AX, W2<br>                                   
  　　1　　　　OR　 　AX, W3<br>                                   
  　　1　　　　MOV　　W1, AX<br>                                    
  　　1　　　　POP　　AX<br> 
  　　1　　　　ENDM</div> 
     
    </td>   
    <td width="45%" valign="top" rowspan="2">;有了宏引用语句(1)和(2)所得到的宏定义，当前宏引用语句和下一条才有效，并在宏扩展时能得到相应的程序片段。</td>  
  </tr>  
  <tr>
    <td width="47%">     
　　<A href="#" onclick="expandIt('MORM1');return false">MORM&nbsp; &nbsp;w1, w2, w3</A>                                  
<div id='MORM1' class='MORM1' style="DISPLAY: none">　　1　　　　PUSH&nbsp;　AX<br>  
  　　1　　　　MOV　 AX, W2<br>                                          
  　　1　　　　OR　　   AX, W3<br>                                          
  　　1　　　　MOV　 W1, AX<br>                                           
  　　1　　　　POP　  AX<br>                                         
  　　1　　　　ENDM</div>     
     
    </td>   
  </tr>
</table>  
<p style="text-indent: 21.25pt">方法2：把所要运算的指令操作符作为参数进行传递</p>  
<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="8%" rowspan="7" valign="top"></td>
    <td width="8%" rowspan="7" valign="top">OPMM</td>
    <td width="10%">MACRO</td>
    <td width="74%"> OP, OPRD1, OPRD2, OPRD3</td>   
  </tr>  
  <tr>  
    <td width="10%">PUSH</td>
    <td width="74%">    AX</td>
  </tr>
  <tr>
    <td width="10%">MOV</td>
    <td width="74%">AX, OPRD2</td>   
  </tr>  
  <tr>  
    <td width="10%">OP</td>
    <td width="74%">    AX, OPRD3</td>   
  </tr>  
  <tr>  
    <td width="10%">MOV</td>
    <td width="74%">    OPRD1, AX</td>   
  </tr>  
  <tr>  
    <td width="10%">POP</td>
    <td width="74%">    AX</td>
  </tr>
  <tr>
    <td width="84%" colspan="2">ENDM</td>
  </tr>
</table>
<p style="text-indent: 21.25pt">有了上述定义之后，可按下列宏引用的方式来完成上面的“加”和“逻辑或”的功能，单击它们可显示宏扩展时所得到的程序片段：</p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">　　　　<A href="#" onclick="expandIt('OPMM3');return false">OPMM&nbsp;                               
      ADD, w1, w2, w3</A>                               
<div id='OPMM3' class='OPMM3' style="DISPLAY: none">　　1　　　　　PUSH　AX<br>
  　　1　　　　　MOV　    AX, w2<br>                                     
  　　1　　　　　ADD　 AX, w3<br>                                     
  　　1　　　　　MOV　     w1, AX<br>                                     
  　　1　　　　　POP　     AX</div>                                   
       
    </td>   
  </tr>   
  <tr>   
    <td width="100%">　　　　<A href="#" onclick="expandIt('OPMM4');return false">OPMM&nbsp;                               
      OR, w1, w2, w3</A>                               
<div id='OPMM4' class='OPMM4' style="DISPLAY: none">　　1　　　　　PUSH　AX<br>
  　　1　　　　　MOV　 AX, w2<br>                                     
  　　1　　　　　OR　　AX, w3<br>                                
  　　1　　　　　MOV　 w1, AX<br>                                     
  　　1　　　　　POP　 AX</div>                                   
              
    </td>   
  </tr>   
</table>   
              
<p style="text-indent: 21.25pt">从上面二种方法的比较来看，方法2显然要简单、直观些，程序的可读性和可维护性也要高一些。所以，通常情况下，宏定义的嵌套方式在实际编程过程中是很少使用的。</p>          
             
<p align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=9&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="09-1-2.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="09-1-5.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>&nbsp; 
<!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>   
      
</body>      
      
</html>