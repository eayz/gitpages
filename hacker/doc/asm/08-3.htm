<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>8.3 中断功能的分类</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter08.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle08.gif" width="778"></p>
    </td>  
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0"  id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0" id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0" id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td>  
  </tr>
  <tr>
    <td width="50%"><a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" ><img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a> 
      → 中断功能的分类</td>                
    <td width="50%">         
      <p align="right">
      <!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
     
<h2>
8.3. 中断功能的分类</h2>                       
        
<p style="text-indent: 21.25pt">
计算机系统有上百种中断，若按中断的性质来划分，则系统中的中断可分为：可屏蔽中断和不可屏蔽中断。对不可屏蔽中断，程序员不能控制它，系统肯定会立即响应的，而对于可屏蔽中断，汇编语言程序员可以通过指令CLI和STI来控制对它们的响应。</p>
<table border="0" width="100%" cellpadding="0">
  <tr>
    <td width="61%" valign="top">
<p style="text-indent: 21.25pt">
若按中断源来划分，则系统中的中断又可分为：硬件中断和软件中断。对于硬件中断，程序员不能控制它，它们基本上是随机产生的，而对于软件中断，汇编语言程序员可通过指令INT和INTO来有目的安排它们的。</p>
<p style="text-indent: 21.25pt">下面主要介绍汇编语言程序员能控制的软件中断的功能及其使用方法，常用的这类中断有：DOS功能调用(INT                         
21H)、BIOS中断、硬件和外设的中断等。</p>
<p style="text-indent: 21.25pt">图8.4给出了程序员可使用的各类中断之间的层次关系。</p>
    </td>
    <td width="39%">
      <p align="center"><img border="0" src="TextBookIMG/08-4.gif" width="124"></p>
      <p align="center">图8.4 各类系统中断之间的层次关系</td>                     
  </tr>
</table>
<p style="text-indent: 21.25pt">
在用户程序中，若直接通过端口来操作硬件或外设，那么，其处理过程没有额外的多余工作，处理速度显然是最快的，但这样做，无疑使用户程序具有了很大的局限性。硬件环境的改变将直接影响程序的正常运行。</p>
<p style="text-indent: 21.25pt">
若用户程序通过调用DOS功能来实现其所需功能，那么，应用程序与低层硬件相距较远，操作最终的对象需要经过中间环节，处理速度肯定受到一定的损失，但这种应用程序适应性强，应用范围广，对硬件的依赖性最小。</p>
<p style="text-indent: 21.25pt">
由于BIOS介于DOS和具体硬件之间，所以，调用BIOS的功能是一个很好的折中方案。程序员可在以下三种情况下考虑使用BIOS的功能：</p>
<p style="margin-left: 21.25pt">1)、BIOS提供的功能，而DOS没有提供该功能的情况；<br>
2)、不能利用DOS功能调用的情况(可能因为某些具体应用的限制)；<br>
3)、基于处理速度的考虑，需要绕过DOS层的情况。</p>
<p style="text-indent: 21.25pt">
综上所述，可以归纳出如下结论：使用中断的层次越高，它与硬件设备相关程度就越低，处理速度也就越低，但用户程序的适用范围较广。反之也然。</p>
<p style="text-indent: 21.25pt">有了上面的结论，程序员可根据应用程序的要求、对硬件环境的熟悉程度等因素来选用不同层次的中断。</p>
        
<p style="text-indent: 21.25pt" align="right"><a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=8&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="08-2-2.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="08-3-1.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>&nbsp; 
<!--webbot bot="Validation" b-disallow-first-item="TRUE" --><select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>   
       
</body>       
       
</html>