<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>7.5 子程序的完整定义</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter07.js"></script>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <img border="0" src="images/btitle07.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><a href="index.htm"><img border="0" id="Home0" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home0_onmouseover()" onmouseout="return Home0_onmouseout()" width="96"></a><a href="homework.htm"><img border="0" id="Homework" language="javascript" onmouseout="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width="96"></a><a href="bbs/index.asp"><img border="0"  id="Discuss" language="javascript" onmouseout="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96"></a><a href="question.htm"><img border="0"  id="Problem" language="javascript" onmouseout="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width="96"></a><a href="test.asp"><img border="0"  id="Test" language="javascript" onmouseout="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width="96"></a><a href="search.htm"><img border="0"  id="Search" language="javascript" onmouseout="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width="96"></a></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → 子程序的完全定义</td>                     
    <td width="50%">      
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      --><select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id="Chapter1" size="1">
        <option selected value="#">课件章节</option>
        <option value="course.htm">网络课件目录</option>
        <option value="01-1.htm">第1章 预备知识</option>
        <option value="02-1.htm">第2章 CPU资源和存储器</option>
        <option value="03-1.htm">第3章 操作数的寻址方式</option>
        <option value="04-1.htm">第4章 标识符和表达式</option>
        <option value="05-1.htm">第5章 微机CPU的指令系统</option>
        <option value="06-1.htm">第6章 程序的基本结构</option>
        <option value="07-1.htm">第7章 子程序和库</option>
        <option value="08-1.htm">第8章 输入输出和中断</option>
        <option value="09-1.htm">第9章 宏</option>
        <option value="10-1.htm">第10章 应用程序的设计</option>
        <option value="11-1.htm">第11章 数值运算协处理器</option>
        <option value="12-1.htm">第12章 汇编语言和C语言</option>
      </select></td>
  </tr>
</table>
   
<h2>7.5 子程序的完全定义</h2>                    
<p style="text-indent: 21.25pt">在7.1节所给出的子程序定义格式是一个最基本的、最简单的定义格式，它不能为子程序提供更简洁的调用方式。在宏汇编MASM                           
6.11系统中，为微机汇编语言的子程序提供了更加丰富的定义方式。</p>
<p style="text-indent: 21.25pt">虽然子程序的这种定义方式显得稍微有点复杂，但它不仅为子程序的调用带来了极大的方便，而且其调用方式与高级语言中子程序的调用方式相一致，这就大大地降低了程序员熟练掌握它的难度。</p>
<h3>7.5.1 子程序完全定义格式</h3>                    
<table border="0" width="100%" cellspacing="1" cellpadding="0">
  <tr>
    <td width="5%" rowspan="5" valign="top"></td>
    <td width="7%" rowspan="4" valign="top"> 
      子程序名</td>
    <td width="5%" rowspan="2" valign="top">PROC</td>
    <td width="58%" valign="top">[<a href="07-5-02.htm">distance</a>] 
      [<a href="07-5-02.htm#Language">langtype</a>] [<a href="07-5-04.htm">visibility</a>] [<a href="07-5-04.htm#起始和结束宏操作">&lt;prologuearg&gt;</a>]</td> 
  </tr>
  <tr>
    <td width="58%" valign="top">[<a href="07-5-06.htm">USES 寄存器列表</a>]                           
      [，<a href="07-5-07.htm">参数[:数据类型]</a>]...</td>
  </tr>
  <tr>
    <td width="63%" colspan="2" valign="top">[<a href="07-5-10.htm">LOCAL 
      varlist</a>]</td>
  </tr>
  <tr>
    <td width="63%" colspan="2" valign="top">子程序的程序体</td>
  </tr>
  <tr>
    <td width="7%">      
      子程序名</td>
    <td width="63%" colspan="2">ENDP</td>
  </tr>
</table>
<p style="text-indent: 21.25pt">定义子程序时，可使用参数表来直接指明其所要的参数，但程序员必须先用<a href="06-4.htm">.MODEL伪指令</a>，或使用&lt;langtype&gt;参数来说明本子程序所使用的程序设计语言类型。</p>
<p style="text-indent: 21.25pt">程序员在定义子程序时，最好能象在高级语言(如：C/C++)定义过程那样，先说明该子程序的原型(用伪指令PROTO)，这样，在调用时，系统可以自动进行类型检查，也可以使用更方便的调用伪指令INVOKE来调用该子程序。有关子程序的原型说明伪指令和调用伪指令在随后第<a href="07-5-07.htm#proto">7.5.8</a>和<a href="07-5-09.htm">7.5.9</a>小节中加以介绍。</p>
<p style="text-indent: 21.25pt">子程序通常用RET指令来结束其执行，也可用指令“RET                      
n”来指明在结束子程序执行后从堆栈弹出n个字节。有关返回指令请参阅<a href="07-2-2.htm">7.2.2节</a>中的叙述。</p>
<p style="text-indent: 21.25pt">汇编程序在处理子程序时能自动产生“起始”代码(<a href="07-5-04.htm#起始和结束宏操作">PROLOGUE 
Code</a>)和“结束”代码(<a href="07-5-04.htm#起始和结束宏操作">EPILOGUE 
code</a>)。这两段特殊的代码分别完成：在调用子程序时，能把传递给子程序的参数压栈，在子程序结束时能把先前压栈的参数弹出。有了这两段代码，程序员在调用子程序时就不用自行考虑子程序的参数传递问题。</p>
<p style="text-indent: 21.25pt">若子程序用指令RETN、RETF或IRETF作为子程序的结束指令，那么，汇编程序将不生成“结束”代码。</p>
<p style="text-indent: 21.25pt">程序员可以用自己定义宏来替代缺省的“起始”和“结束”的代码段。这种替代方法是使用伪指令：OPTION                           
PROLOGUE和OPTION                           
EPILOGUE。</p>
<p style="text-indent: 21.25pt">若子程序没有参数、局部变量，没使用USES子句，也不会产生新的段或段组，那么，子程序是可以嵌套定义的。程序员也可以使用返回指令RETN和RETF来避免子程序的嵌套。</p>
<p style="text-indent: 21.25pt">在子程序内部，可以在指令之前使用伪指令LOCAL来说明其局部变量，有关规定在随后的<a href="07-5-10.htm">第7.5.10节</a>中有详细的说明。</p>
<p style="text-indent: 21.25pt">下面就来介绍该定义格式中各个说明项的作用。</p>
<p style="text-indent: 21.25pt" align="right">&nbsp;<a href="index.htm"><img border="0" id="Home" src="Button/home1.gif" LANGUAGE="javascript" onmouseover="return Home_onmouseover()" onmouseout="return Home_onmouseout()" width="96"></a><a href="asp/QuestionIndex.asp-chapter=7&amp;sort=date"><IMG border=0 id=Question src="Button/question1.gif"  LANGUAGE=javascript onmouseover="return Question_onmouseover()" onmouseout="return Question_onmouseout()" width="96"></a><a href="07-4.htm"><img border="0" id="PrevPage" src="Button/prevpage1.gif" LANGUAGE="javascript" onmouseover="return PrevPage_onmouseover()" onmouseout="return PrevPage_onmouseout()" width="96"></a><a href="07-5-02.htm"><img border="0" id="NextPage" src="Button/NextPage1.gif" LANGUAGE="javascript" onmouseover="return NextPage_onmouseover()" onmouseout="return NextPage_onmouseout()" width="96"></a>  
 <!--webbot bot="Validation" B-Disallow-First-Item="TRUE" -->    
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2 size="1">         
    <option selected value="#">课件章节</option>
    <option value="course.htm">课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>     
    <option value="02-1.htm">第2章 CPU资源和存储器</option>     
    <option value="03-1.htm">第3章 操作数的寻址方式</option>     
    <option value="04-1.htm">第4章 标识符和表达式</option>     
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>     
    <option value="06-1.htm">第6章 程序的基本结构</option>     
    <option value="07-1.htm">第7章 子程序和库</option>     
    <option value="08-1.htm">第8章 输入输出和中断</option>     
    <option value="09-1.htm">第9章 宏</option>     
    <option value="10-1.htm">第10章 应用程序的设计</option>     
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p>
      
</body>      
      
</html>      
