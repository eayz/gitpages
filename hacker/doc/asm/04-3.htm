<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>4.3 调整偏移量的伪指令</title>
<link rel=stylesheet href="Assember.css">
<script LANGUAGE="javascript" src="Assember.js"></script>
<script language="JavaScript1.2" src="menus.js"></script>
<script language="JavaScript1.2" src="chapter04.js"></script>
<SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript>
<!--

function Disp432_onmouseover() {
	Disp432.src = "textbookIMG\\04-3-d.gif";
}

function Disp432_onmouseout() {
	Disp432.src = "textbookIMG\\04-3.gif";
}

//-->
</SCRIPT>
</head>

<body topmargin="1" leftmargin="0" background="TextBookIMG/background.gif">
<script language="JavaScript1.2">fwLoadMenus();</script>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" colspan="2">
  <p align="center">
  <IMG border=0 src="images/btitle04.gif" width="778"></p>
    </td> 
  </tr>
  <tr>
    <td width="100%" colspan="2">
      <p align="center"><A href="index.htm"><IMG border=0 height=28 id=Home0 language=javascript onmouseout="return Home0_onmouseout()" onmouseover="return Home0_onmouseover()" src="Button/home1.gif" width=96></a><A href="homework.htm"><IMG border=0  height=28 id=Homework language=javascript  onmouseout ="return  Homework_onmouseout()" onmouseover="return Homework_onmouseover()" src="Button/homework1.gif" width=96></a><a href="bbs/index.asp"><IMG border=0 id=Discuss language=javascript  onmouseout ="return  Discuss_onmouseout()" onmouseover="return Discuss_onmouseover()" src="Button/discuss1.gif" width="96" height="28"></a><A href="question.htm"><IMG border=0  height=28 id=Problem language=javascript  onmouseout ="return  Problem_onmouseout()" onmouseover="return Problem_onmouseover()" src="Button/problem1.gif" width=96></a><A href="test.asp"><IMG border=0  height=28 id=Test language=javascript  onmouseout ="return  Test_onmouseout()" onmouseover="return Test_onmouseover()" src="Button/test1.gif" width=96></a><A href="search.htm"><IMG border=0 height=28 id=Search language=javascript  onmouseout ="return  Search_onmouseout()" onmouseover="return Search_onmouseover()" src="Button/search1.gif" width=96></a></p></td> 
  </tr>
  <tr>
    <td width="50%">
    <a href="#" onMouseOut="FW_startTimeout();"  onMouseOver="window.FW_showMenu(window.fw_menu_0,50,115);" >          
    <img name="menu1" src="TextBookIMG/menu.gif" border="0" width="51"></a>
    → 调整偏移量伪指令</td>                                  
    <td width="50%">               
      <p align="right"><!--webbot bot="Validation" B-Disallow-First-Item="TRUE"
      -->     
  <select name="chapter1" onchange="location.href=chapter1.options[chapter1.selectedIndex].value" id=Chapter1 size="1">       
    <option selected value="#">课件章节</option>
    <option value="course.htm">网络课件目录</option>
    <option value="01-1.htm">第1章 预备知识</option>
    <option value="02-1.htm">第2章 CPU资源和存储器</option>
    <option value="03-1.htm">第3章 操作数的寻址方式</option>
    <option value="04-1.htm">第4章 标识符和表达式</option>
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>
    <option value="06-1.htm">第6章 程序的基本结构</option>
    <option value="07-1.htm">第7章 子程序和库</option>
    <option value="08-1.htm">第8章 输入输出和中断</option>
    <option value="09-1.htm">第9章 宏</option>
    <option value="10-1.htm">第10章 应用程序的设计</option>
    <option value="11-1.htm">第11章 数值运算协处理器</option>
    <option value="12-1.htm">第12章 汇编语言和C语言</option>
  </select></p></td>
  </tr>
</table>
    
<h2>4.3 调整偏移量伪指令</h2>                                           
<p style="TEXT-INDENT: 21.25pt">调整偏移量伪指令是在内存变量定义时用来调整内存变量起始偏移量的，它们是在把源程序汇编成目标文件时起作用。常用的调整偏移量伪指令有：<font color="#ff0000">EVEN</font>、<A href="#ALIGN">ALIGN</a>和<A href="04-3-3.htm">ORG</a>，它们的主要目的是：为了更有效地读取内存单元的内容。</p>        
<h3>4.3.1 偶对齐伪指令EVEN</h3>                 
<p style="text-indent: 21.25pt">偶对齐伪指令格式：</p>
<p style="margin-left: 40pt">EVEN</p>
<p style="text-indent: 21.25pt">伪指令的作用是：告诉汇编程序(Assember)，本伪指令下面的内存变量从下一个偶地址单元开始分配。</p>
<p style="text-indent: 21.25pt">如果下一个偏移量是偶地址，那么，该伪指令不起作用，否则，汇编程序将空出一个字节，从下一偶地址开始为其后变量分配内存单元。</p>
<p style="text-indent: 21.25pt">假设有下列变量定义，并且变量B1的偏移量是偶数，其内存单元分布如图4.2所示。</p>
<table border="0" width="100%" cellspacing="0" cellpadding="3">   
  <tr>   
    <td width="7%" rowspan="2" valign="top"></td>   
    <td width="5%">B1</td>   
    <td width="5%">DB</td>   
    <td width="20%">12H</td>   
    <td width="63%" rowspan="2" valign="top">;为了表示方便，不妨再假设其偏移量为：xxxx0H</td>   
  </tr>   
  <tr>   
    <td width="5%">   
W1</td>   
    <td width="5%">DW</td>   
    <td width="20%">4567H</td>   
  </tr>   
</table>   
<table border="0" width="100%" cellspacing="0" cellpadding="2">   
  <tr>   
    <td width="47%">   
      <p align="center"><IMG border=0 height=122 src="TextBookIMG/04-2.gif" width=154></p></td>   
    <td width="53%">   
      <p align="center"><IMG border=0 height=122 id=Disp432 src="TextBookIMG/04-3.gif" width=283  LANGUAGE=javascript onmouseover="return Disp432_onmouseover()" onmouseout="return Disp432_onmouseout()"></p></td>   
  </tr>   
  <tr>   
    <td width="47%">   
      <p align="center">图4.2 内存单元分布图</p></td>             
    <td width="53%">   
      <p align="center">图4.3 齐偏移量读取一个字的过程示意图</p></td>             
  </tr>    
</table>    
<p style="TEXT-INDENT: 21.25pt">在上述定义情况下，在许多微机系统中，当需要读变量W1及其后面的字内容时，硬件将按图4.3所示的方式分二次读出该字内容，再拼接成一个字内容，这时，无疑需要二个读内存周期，从而影响程序执行的速度。</p>    
<table border="0" width="100%" cellspacing="0" cellpadding="2">    
  <tr>    
    <td width="56%" valign="top" colspan="4">    
<p style="TEXT-INDENT: 21.25pt">出现上述问题的主要原因就是字变量W1在数据段内的偏移量是奇数，为了保证其偏移量是偶数，需要在其定义之前加上伪指令<font color="#ff0000">EVEN</font>。</p>    
<p style="TEXT-INDENT: 21.25pt">所以，可把前面的变量定义改变成下列形式：</p>    
    </td>    
    <td width="44%" rowspan="5" valign="top">  
      <p align="center"><img border="0" src="TextBookIMG/04-4.gif" width="160">  
      <p align="center">图4.4 偶偏移量读取字过程</td>             
  </tr>    
  <tr>  
    <td width="7%" rowspan="3" valign="top"></td>    
    <td width="5%" rowspan="2" valign="top">B1</td>    
    <td width="6%">DB</td>    
    <td width="38%">12H</td>    
  </tr>  
  <tr>    
    <td width="44%" colspan="2"> EVEN</td>    
  </tr>    
  <tr>  
    <td width="5%">        
W1</td>    
    <td width="6%">DW</td>    
    <td width="38%">4567H</td>    
  </tr>  
  <tr>  
    <td width="56%" valign="top" colspan="4">  
      <p style="text-indent: 21.25pt">这时，变量的内存分配和读取字变量W1的过程如图4.4所示。</td>    
  </tr>  
</table>    
                          
<h3><a name="ALIGN">4.3.2 对齐伪指令ALIGN</a></h3>              
<p style="text-indent: 21.25pt">对齐伪指令格式：</p>
<p style="margin-left: 40pt">ALIGN&nbsp; Num</p>     
<p style="text-indent: 21.25pt">其中：Num必须是2的幂，如：2、4、8和16等。</p>
<p style="text-indent:21.25pt">伪指令的作用是：告诉汇编程序，本伪指令下面的内存变量必须从下一个能被Num整除的地址开始分配。</p>
<p style="text-indent: 21.25pt">如果下一个地址正好能被Num整除，那么，该伪指令不起作用，否则，汇编程序将空出若干个字节，直到下一个地址能被Num整除为止。</p>
<p style="text-indent: 21.25pt">试比较下面二组变量定义，它们的对齐效果一致吗？</p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">       
  <tr>       
    <td width="11%" valign="top" rowspan="2">       
      <p style="MARGIN-LEFT: 40pt">B1</p>       
      </td>      
    <td width="23%" colspan="2">       
      DB　12H</td>     
    <td width="5%" rowspan="2" valign="top">B1</td>     
    <td width="61%" valign="top" >DB　12H</td>     
  </tr>     
  <tr>
    <td width="5%">       
      <font color="#ff0000"> EVEN</font></td>     
    <td width="18%" >      
    </td>     
    <td width="61%" valign="top">    
      <font color="#ff0000"> ALIGN</font>　2</td>     
  </tr>
  <tr>
    <td width="11%" valign="top">       
      <p style="margin-left: 40pt">       
      W1       
      </td>      
    <td width="23%" valign="top" colspan="2">       
      DW　4567H</td>     
    <td width="5%" valign="top">       
      W1</td>     
    <td width="61%" valign="top">    
      DW　4567H</td>     
  </tr>
</table>     
<p style="TEXT-INDENT: 21.25pt">从上面的对比，我们不难看出：伪指令<font color="#ff0000" face="Arial">ALIGN</font>的说明功能要比伪指令<font color="#ff0000" face="Arial">EVEN</font>强。</p>     
            
<p align="right"><A href="index.htm"><IMG border=0 height=28 id=Home language=javascript onmouseout="return Home_onmouseout()" onmouseover="return Home_onmouseover()" src="Button/home1.gif" width=96></a><A href="asp/QuestionIndex.asp-chapter=4&amp;sort=date"><IMG border=0  height=28 id=Question  language=javascript onmouseout="return Question_onmouseout()" onmouseover="return Question_onmouseover()" src="Button/question1.gif" width=96></a><a href="04-2-4.htm"><IMG border=0 height=28 id=PrevPage language=javascript onmouseout="return PrevPage_onmouseout()" onmouseover="return PrevPage_onmouseover()" src="Button/prevpage1.gif" width=96></a><A href="04-3-3.htm"><IMG border=0 id=NextPage language=javascript onmouseout="return NextPage_onmouseout()" onmouseover="return NextPage_onmouseover()" src="Button/NextPage1.gif" width="96"></a>                          
<select name="chapter2" onchange="location.href=chapter2.options[chapter2.selectedIndex].value" id=Chapter2>                                 
    <option selected value="#">课件章节</option>             
    <option value="course.htm">课件目录</option>             
    <option value="01-1.htm">第1章 预备知识</option>                   
    <option value="02-1.htm">第2章 CPU资源和存储器</option>                   
    <option value="03-1.htm">第3章 操作数的寻址方式</option>                   
    <option value="04-1.htm">第4章 标识符和表达式</option>                   
    <option value="05-1.htm">第5章 微机CPU的指令系统</option>                   
    <option value="06-1.htm">第6章 程序的基本结构</option>                   
    <option value="07-1.htm">第7章 子程序和库</option>                   
    <option value="08-1.htm">第8章 输入输出和中断</option>                   
    <option value="09-1.htm">第9章 宏</option>                   
    <option value="10-1.htm">第10章 应用程序的设计</option>                   
    <option value="11-1.htm">第11章 数值运算协处理器</option>             
    <option value="12-1.htm">第12章 汇编语言和C语言</option>             
  </select></p>                
                     
</body>                     
                     
</html>                     
